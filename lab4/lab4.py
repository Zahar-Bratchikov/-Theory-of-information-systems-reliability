from math import comb

# Исходные данные
P = 0.97
k = 4
P_switches = [0.99, 0.97, 0.95, 0.93]
k_list = [4, 2, 2, 2, 5]
m1 = 4/5
m2 = 7/5

# Базовая система (пункт 1)
P1 = P ** 5
Q1 = 1 - P1

# Пункт 2: Общее резервирование с постоянно включённым резервом (5 параллельных копий)
# Кратность k = 4 → 1 основная + 4 резервных = 5 копий
total_systems = k + 1
P2 = 1 - (1 - P1) ** total_systems

# Пункт 3: Общее резервирование с замещением (поочерёдное подключение с переключателями)
P_substitute = 0
mult = 1
for i, Pp in enumerate(P_switches):
    term = mult * Pp * P1
    P_substitute += term
    mult *= (1 - Pp)
P3 = P1 + Q1 * P_substitute

# Пункт 4: Раздельное резервирование с постоянно включённым резервом
P_elements = [1 - (1 - P) ** (k_i + 1) for k_i in k_list]
P4 = 1
for p_i in P_elements:
    P4 *= p_i

# Пункт 5: Дробное резервирование
# m1 = 4/5 → 0 резервов, 1 система
# m2 = 7/5 → 1 резерв, 2 системы
P5_1 = P1  # Только одна система
P5_2 = 1 - (1 - P1) ** 2  # Параллель из двух систем

# Вывод результатов
print("=== Результаты ===")
print(f"1. Без резервирования:               P = {P1:.6f}")
print(f"2. Общее резервирование (вкл.):      P = {P2:.6f}   | Выигрыш: +{P2 - P1:.6f}")
print(f"3. Общее резервирование (замещ.):    P = {P3:.6f}   | Выигрыш: +{P3 - P1:.6f}")
print(f"4. Раздельное резервирование:        P = {P4:.6f}   | Выигрыш: +{P4 - P1:.6f}")
print(f"5. Дробное резервирование m1 = 4/5:  P = {P5_1:.6f}   | Выигрыш: +{P5_1 - P1:.6f}")
print(f"5. Дробное резервирование m2 = 7/5:  P = {P5_2:.6f}   | Выигрыш: +{P5_2 - P1:.6f}")
